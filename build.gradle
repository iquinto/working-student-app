plugins {
	id 'org.springframework.boot' version '2.5.13'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'groovy'
	id 'jacoco'
}

group = 'com.iquinto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.5.4'
	implementation group: 'org.apache.commons', name: 'commons-email', version: '1.5'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'

	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// optional dependencies for using Spock
	testImplementation "org.hamcrest:hamcrest-core:2.2"   // only necessary if Hamcrest matchers are used
	testRuntimeOnly "net.bytebuddy:byte-buddy:1.10.10" // allows mocking of classes (in addition to interfaces)
	testRuntimeOnly "org.objenesis:objenesis:3.1"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)

	implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.5'
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-3.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.0-groovy-3.0'
	testImplementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.3'
}

bootRun {
	jvmArgs('-Dspring.output.ansi.enabled=always')
}

tasks.withType(Test) {
	jvmArgs('-Dfile.encoding=UTF-8')
	systemProperty 'spring.profiles.active', 'test'
	finalizedBy jacocoTestReport // report is always generated after tests run
	jacoco {
		excludes = [
				'com.iquinto.workingstudent.security*',
				'com.iquinto.workingstudent.security.jwt*',
				'com.iquinto.workingstudent.payload*'
		]
	}
}


jacocoTestReport {
	dependsOn test
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect { fileTree(dir: it,
			exclude: [
					'**/com/iquinto/workingstudent/security/**.class',
					'**/com/iquinto/workingstudent/security/jwt/**.class',
					'**/com/iquinto/workingstudent/payload/**.class',
					]
			)
		})
	}
}


task stage {
	dependsOn build
}

test {
	 useJUnitPlatform()
}

